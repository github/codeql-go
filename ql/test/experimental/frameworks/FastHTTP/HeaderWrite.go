// Code generated by https://github.com/gagliardetto. DO NOT EDIT.

package main

import "github.com/valyala/fasthttp"

// Package github.com/valyala/fasthttp@v1.23.0
func HeaderWrite_GithubComValyalaFasthttpV1230() {
	// Header write via method calls.
	{
		// Header write via method calls on github.com/valyala/fasthttp.Args.
		{
			// func (*Args).Add(key string, value string)
			{
				keyString419 := source().(string)
				valString617 := source().(string)
				var rece fasthttp.Args
				rece.Add(keyString419, valString617) // $headerKeyNode=keyString419 $headerValNode=valString617
			}
		}
		// Header write via method calls on github.com/valyala/fasthttp.RequestHeader.
		{
			// func (*RequestHeader).Add(key string, value string)
			{
				keyString596 := source().(string)
				valString281 := source().(string)
				var rece fasthttp.RequestHeader
				rece.Add(keyString596, valString281) // $headerKeyNode=keyString596 $headerValNode=valString281
			}
			// func (*RequestHeader).AddBytesK(key []byte, value string)
			{
				keyByte481 := source().([]byte)
				valString136 := source().(string)
				var rece fasthttp.RequestHeader
				rece.AddBytesK(keyByte481, valString136) // $headerKeyNode=keyByte481 $headerValNode=valString136
			}
			// func (*RequestHeader).AddBytesKV(key []byte, value []byte)
			{
				keyByte564 := source().([]byte)
				valByte207 := source().([]byte)
				var rece fasthttp.RequestHeader
				rece.AddBytesKV(keyByte564, valByte207) // $headerKeyNode=keyByte564 $headerValNode=valByte207
			}
			// func (*RequestHeader).AddBytesV(key string, value []byte)
			{
				keyString532 := source().(string)
				valByte841 := source().([]byte)
				var rece fasthttp.RequestHeader
				rece.AddBytesV(keyString532, valByte841) // $headerKeyNode=keyString532 $headerValNode=valByte841
			}
			// func (*RequestHeader).Set(key string, value string)
			{
				keyString736 := source().(string)
				valString933 := source().(string)
				var rece fasthttp.RequestHeader
				rece.Set(keyString736, valString933) // $headerKeyNode=keyString736 $headerValNode=valString933
			}
			// func (*RequestHeader).SetBytesK(key []byte, value string)
			{
				keyByte947 := source().([]byte)
				valString890 := source().(string)
				var rece fasthttp.RequestHeader
				rece.SetBytesK(keyByte947, valString890) // $headerKeyNode=keyByte947 $headerValNode=valString890
			}
			// func (*RequestHeader).SetBytesKV(key []byte, value []byte)
			{
				keyByte840 := source().([]byte)
				valByte577 := source().([]byte)
				var rece fasthttp.RequestHeader
				rece.SetBytesKV(keyByte840, valByte577) // $headerKeyNode=keyByte840 $headerValNode=valByte577
			}
			// func (*RequestHeader).SetBytesV(key string, value []byte)
			{
				keyString208 := source().(string)
				valByte238 := source().([]byte)
				var rece fasthttp.RequestHeader
				rece.SetBytesV(keyString208, valByte238) // $headerKeyNode=keyString208 $headerValNode=valByte238
			}
			// func (*RequestHeader).SetCanonical(key []byte, value []byte)
			{
				keyByte291 := source().([]byte)
				valByte157 := source().([]byte)
				var rece fasthttp.RequestHeader
				rece.SetCanonical(keyByte291, valByte157) // $headerKeyNode=keyByte291 $headerValNode=valByte157
			}
		}
		// Header write via method calls on github.com/valyala/fasthttp.ResponseHeader.
		{
			// func (*ResponseHeader).Add(key string, value string)
			{
				keyString458 := source().(string)
				valString461 := source().(string)
				var rece fasthttp.ResponseHeader
				rece.Add(keyString458, valString461) // $headerKeyNode=keyString458 $headerValNode=valString461
			}
			// func (*ResponseHeader).AddBytesK(key []byte, value string)
			{
				keyByte648 := source().([]byte)
				valString618 := source().(string)
				var rece fasthttp.ResponseHeader
				rece.AddBytesK(keyByte648, valString618) // $headerKeyNode=keyByte648 $headerValNode=valString618
			}
			// func (*ResponseHeader).AddBytesKV(key []byte, value []byte)
			{
				keyByte591 := source().([]byte)
				valByte901 := source().([]byte)
				var rece fasthttp.ResponseHeader
				rece.AddBytesKV(keyByte591, valByte901) // $headerKeyNode=keyByte591 $headerValNode=valByte901
			}
			// func (*ResponseHeader).AddBytesV(key string, value []byte)
			{
				keyString735 := source().(string)
				valByte625 := source().([]byte)
				var rece fasthttp.ResponseHeader
				rece.AddBytesV(keyString735, valByte625) // $headerKeyNode=keyString735 $headerValNode=valByte625
			}
			// func (*ResponseHeader).Set(key string, value string)
			{
				keyString399 := source().(string)
				valString334 := source().(string)
				var rece fasthttp.ResponseHeader
				rece.Set(keyString399, valString334) // $headerKeyNode=keyString399 $headerValNode=valString334
			}
			// func (*ResponseHeader).SetBytesK(key []byte, value string)
			{
				keyByte769 := source().([]byte)
				valString126 := source().(string)
				var rece fasthttp.ResponseHeader
				rece.SetBytesK(keyByte769, valString126) // $headerKeyNode=keyByte769 $headerValNode=valString126
			}
			// func (*ResponseHeader).SetBytesKV(key []byte, value []byte)
			{
				keyByte596 := source().([]byte)
				valByte548 := source().([]byte)
				var rece fasthttp.ResponseHeader
				rece.SetBytesKV(keyByte596, valByte548) // $headerKeyNode=keyByte596 $headerValNode=valByte548
			}
			// func (*ResponseHeader).SetBytesV(key string, value []byte)
			{
				keyString444 := source().(string)
				valByte688 := source().([]byte)
				var rece fasthttp.ResponseHeader
				rece.SetBytesV(keyString444, valByte688) // $headerKeyNode=keyString444 $headerValNode=valByte688
			}
			// func (*ResponseHeader).SetCanonical(key []byte, value []byte)
			{
				keyByte122 := source().([]byte)
				valByte153 := source().([]byte)
				var rece fasthttp.ResponseHeader
				rece.SetCanonical(keyByte122, valByte153) // $headerKeyNode=keyByte122 $headerValNode=valByte153
			}
		}
	}
	// Dynamic Content-Type header via method calls.
	{
		// Dynamic Content-Type header via method calls on github.com/valyala/fasthttp.RequestCtx.
		{
			// func (*RequestCtx).SetContentType(contentType string)
			{
				valString508 := source().(string)
				var rece fasthttp.RequestCtx
				rece.SetContentType(valString508) // $headerKey=content-type $headerValNode=valString508
			}
			// func (*RequestCtx).SetContentTypeBytes(contentType []byte)
			{
				valByte394 := source().([]byte)
				var rece fasthttp.RequestCtx
				rece.SetContentTypeBytes(valByte394) // $headerKey=content-type $headerValNode=valByte394
			}
		}
		// Dynamic Content-Type header via method calls on github.com/valyala/fasthttp.RequestHeader.
		{
			// func (*RequestHeader).SetContentType(contentType string)
			{
				valString658 := source().(string)
				var rece fasthttp.RequestHeader
				rece.SetContentType(valString658) // $headerKey=content-type $headerValNode=valString658
			}
			// func (*RequestHeader).SetContentTypeBytes(contentType []byte)
			{
				valByte489 := source().([]byte)
				var rece fasthttp.RequestHeader
				rece.SetContentTypeBytes(valByte489) // $headerKey=content-type $headerValNode=valByte489
			}
		}
		// Dynamic Content-Type header via method calls on github.com/valyala/fasthttp.ResponseHeader.
		{
			// func (*ResponseHeader).SetContentType(contentType string)
			{
				valString614 := source().(string)
				var rece fasthttp.ResponseHeader
				rece.SetContentType(valString614) // $headerKey=content-type $headerValNode=valString614
			}
			// func (*ResponseHeader).SetContentTypeBytes(contentType []byte)
			{
				valByte782 := source().([]byte)
				var rece fasthttp.ResponseHeader
				rece.SetContentTypeBytes(valByte782) // $headerKey=content-type $headerValNode=valByte782
			}
		}
	}
}
